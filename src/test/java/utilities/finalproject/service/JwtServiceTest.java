package utilities.finalproject.service;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import utilities.finalproject.domain.User;
import utilities.finalproject.security.JwtService;

import java.util.HashMap;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.*;

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
@SpringBootTest //This annotation creates a unit test that is an integration test.Makes it slower.
class JwtServiceTest {

    //The test on Intellij was generated by right clicking on the class name and selecting "Generate" and then "Test".

    @Autowired
    private JwtService sut; //sut = system under test

    @BeforeAll
    void init() {
    }

    @Test
    @DisplayName("Should Generate a new JWT Token")
    void generateJwtToken() {
        //1. Arrange
        Map<String,Object> extraClaims = new HashMap<>();
        User user = new User();
        user.setUsername("test");
        user.setPassword("test");

        //2. Act
        String jwt = sut.generateJwtToken(extraClaims, user);

        //3. Assert
        System.out.println("GENERATED TOKEN--->" + jwt);
        assertTrue(jwt.startsWith("ey"));
        assertTrue(jwt.length() > 100);
    }

    @Test
    @DisplayName("Should extract all claims from JWT")
    void extractAlltClaims() {
        //1. Arrange
        Map<String,Object> extraClaims = new HashMap<>();
        User user = new User();
        user.setUsername("test");
        user.setPassword("test");
        String jwt = sut.generateJwtToken(extraClaims, user);

        //2. Act
        Map<String,Object> allClaims = sut.extractAlltClaims(jwt);

        //3. Assert
        System.out.println("ALL CLAIMS--->" + allClaims);
        assertEquals("test", allClaims.get("sub"));
        assertEquals(3, allClaims.size());

    }

    @Test
    void extractSubjectTrevor() {
        //1. Arrange
        Map<String,Object> extraClaims = new HashMap<>();
        User user = new User();
        user.setUsername("Zeky");
        user.setPassword("test");
        String jwt = sut.generateJwtToken(extraClaims, user);

        //2. Act
        String subject = sut.extractSubjectTrevor(jwt);

        //3. Assert
        System.out.println("SUBJECT--->" + subject);
        assertEquals("Zeky", subject);
    }

    @Test
    void extractSubject() {
        //1. Arrange
        Map<String,Object> extraClaims = new HashMap<>();
        User user = new User();
        user.setUsername("Ezequiel");
        user.setPassword("test");
        String jwt = sut.generateJwtToken(extraClaims, user);

        //2. Act
        String subject = sut.extractSubject(jwt);

        //3. Assert
        System.out.println("SUBJECT--->" + subject);
        assertEquals("Ezequiel", subject);
    }

    @Test
    void isTokenExpired() {
        //1. Arrange
        Map<String,Object> extraClaims = new HashMap<>();
        User user = new User();
        user.setUsername("test");
        user.setPassword("test");
        String jwt = sut.generateJwtToken(extraClaims, user);

        //2. Act
        Boolean isExpired = sut.isTokenExpired(jwt);

        //3. Assert
        System.out.println("IS EXPIRED--->" + isExpired);
        assertFalse(isExpired);
    }
}